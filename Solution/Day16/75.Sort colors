Given an array with n objects colored red, white or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white and blue.

Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.

Note: You are not suppose to use the library's sort function for this problem.

Example:

Input: [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]


Solution:  
public void sortColors(int[] nums) {
        int red=0,white=0,blue=0;
        for(int num:nums){
            if(num==0)red++;
            if(num==1)white++;
            else{blue++;}
        }
        for(int i=0;i<nums.length;i++){
            if(red!=0){
                nums[i]=0;
                red--;
        }
            else if(white!=0){
                nums[i]=1;
                white--;
            }
            else{
                nums[i]=2;
                blue--;
            }
    }
        
}


Solution 2:One pass:

public static void sortColors(int[] nums) {
	  int m=0,n=0,p=nums.length-1;
	  while(n<=p)
	   {
		   if(0==nums[n]){
			   int temp=0;
			   temp=nums[n];
			   nums[n]=nums[m];
			   nums[m]=temp;
			   m++;
			   n++;
		   }else if(2==nums[n]){
			   int temp=0;
			   temp=nums[p];
			   nums[p]=nums[n];
			   nums[n]=temp;
			   p--;
		   }else{
			   n++;
			   
		   }
	   
	   }
  }
