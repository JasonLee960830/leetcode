Description
Given an array of integers, every element appears twice except for one. Find that single one.

Note:
Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?


My solution:
本能地想利用Map的结构，将数组遍历一遍后，再对HashMap的entrySet进行遍历，返回value为1的键值。

High Votes Solution:
利用 A XOR A = 0 的性质，只需在每次遍历的时候进行 result ^=A[i]，最终result即为所求结果。

  复习：
  左移( << )、右移( >> ) 、无符号右移( >>> ) 、位与( & ) 、位或( | )、位非( ~ )、位异或( ^ )，除了位非( ~ )是一元操作符外，其它的都是二元操作符

  ～整数的左移右移补零，负数的右移补1，无符号右移不伦正负数都补0
  ～位非。eg: ~5


