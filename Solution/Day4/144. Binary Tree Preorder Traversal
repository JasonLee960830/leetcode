Description: 前序遍历二叉树

Solution:  很基础的题型，一定要会做！一般都用递归做，因为树结构本身就是递归来的，代码比较简洁。
          能够遍历的条件是当前节点不为空。
          
      方法一：  递归 
     public List<Integer> preorderTraversal(TreeNode root) {
        List<Integer> res=new ArrayList<>();
        if (root==null)
            return res;
        helper(root, res);
        return res;
    }
    public void helper(TreeNode root, List<Integer>  res){
        res.add(root.val);
        if(root.left!=null)
            helper(root.left,res);
        if(root.right!=null)
            helper(root.right,res);
    }
    
    方法二：递归
    public class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        List<Integer> result = new ArrayList<Integer>();
        if (root != null){
            result.add(root.val);
            result.addAll(preorderTraversal(root.left));
            result.addAll(preorderTraversal(root.right));
        }
        return result;
    }
}
