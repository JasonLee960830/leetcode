输入的数字是1-3999内，返回对应罗马数字。


review:  M 1000
         D 500
         C 100
         L 50
         X 10
         V 5
         I 1
         
         然后记住C,X,I在哪些字母前面代表减值。
         CM 900
         CD 400
         XC 90
         XL 40
         IX 9
         IV 4
         
         再形成一下用字母来构成数字的方法：假如一个1k以内的数字，你现在用x去表示100, y表示10,z表示1，其中减值的规则和罗马数类似，即yx表示90，zy表示9，n那么我们现在给定一个数字例如 567. 我们首先考虑的是567有多少个100，有一个则表示数字的字符串增加一个x.并且将数字相应减少100,待数字小于100时，我们再看数字中有多少个90，依此进行下去.需要比较的数字依此是{100,90,10,9,1}最终得到 xxxxxyyyyyyzzzzzzz. 显然这样去表示数字太冗长了，罗马数字肯定比我现在设定的方式要先进一些，不过原理是相同的，只是增加了500,和50对应的字母。
         
         
         public String intToRoman(int num) {
        String[] str={"M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I"};
        int[] value= {1000,900, 500,400,100, 90, 50, 40,  10,  9,  5,  4,     1};
        StringBuilder sb=new StringBuilder();
        for(int i=0;i<value.length;i++){
            while(num>=value[i]){
                num-=value[i];
                sb.append(str[i]);
            }
        }
        return sb.toString();
    }
    
    
    切记：定义字符串数组或者数字数组的时候，数组内容用大括号！！！curly braces!!!.
